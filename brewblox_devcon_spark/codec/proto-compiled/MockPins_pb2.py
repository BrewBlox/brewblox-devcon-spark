# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: MockPins.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import brewblox_pb2 as brewblox__pb2
import nanopb_pb2 as nanopb__pb2
import IoArray_pb2 as IoArray__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0eMockPins.proto\x12\rblox.MockPins\x1a\x0e\x62rewblox.proto\x1a\x0cnanopb.proto\x1a\rIoArray.proto\"n\n\x05\x42lock\x12;\n\x08\x63hannels\x18\x02 \x03(\x0b\x32\x17.blox.IoArray.IoChannelB\x10\x92?\x02\x10\x08\x92?\x02x\x01\x8a\xb5\x18\x02(\x01\x12\x19\n\x04pins\x18Z \x01(\x08\x42\x0b\x8a\xb5\x18\x02H\x01\x92?\x02\x18\x03:\r\x8a\xb5\x18\x03\x18\xc3\x02\x8a\xb5\x18\x02H\n*\xcb\x01\n\tChannelId\x12\x16\n\x12MOCKPINS_CHAN_NONE\x10\x00\x12\x13\n\x0fMOCKPINS_CHAN_A\x10\x01\x12\x13\n\x0fMOCKPINS_CHAN_B\x10\x02\x12\x13\n\x0fMOCKPINS_CHAN_C\x10\x03\x12\x13\n\x0fMOCKPINS_CHAN_D\x10\x04\x12\x13\n\x0fMOCKPINS_CHAN_E\x10\x05\x12\x13\n\x0fMOCKPINS_CHAN_F\x10\x06\x12\x13\n\x0fMOCKPINS_CHAN_G\x10\x07\x12\x13\n\x0fMOCKPINS_CHAN_H\x10\x08\x62\x06proto3')

_CHANNELID = DESCRIPTOR.enum_types_by_name['ChannelId']
ChannelId = enum_type_wrapper.EnumTypeWrapper(_CHANNELID)
MOCKPINS_CHAN_NONE = 0
MOCKPINS_CHAN_A = 1
MOCKPINS_CHAN_B = 2
MOCKPINS_CHAN_C = 3
MOCKPINS_CHAN_D = 4
MOCKPINS_CHAN_E = 5
MOCKPINS_CHAN_F = 6
MOCKPINS_CHAN_G = 7
MOCKPINS_CHAN_H = 8


_BLOCK = DESCRIPTOR.message_types_by_name['Block']
Block = _reflection.GeneratedProtocolMessageType('Block', (_message.Message,), {
  'DESCRIPTOR' : _BLOCK,
  '__module__' : 'MockPins_pb2'
  # @@protoc_insertion_point(class_scope:blox.MockPins.Block)
  })
_sym_db.RegisterMessage(Block)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _BLOCK.fields_by_name['channels']._options = None
  _BLOCK.fields_by_name['channels']._serialized_options = b'\222?\002\020\010\222?\002x\001\212\265\030\002(\001'
  _BLOCK.fields_by_name['pins']._options = None
  _BLOCK.fields_by_name['pins']._serialized_options = b'\212\265\030\002H\001\222?\002\030\003'
  _BLOCK._options = None
  _BLOCK._serialized_options = b'\212\265\030\003\030\303\002\212\265\030\002H\n'
  _CHANNELID._serialized_start=191
  _CHANNELID._serialized_end=394
  _BLOCK._serialized_start=78
  _BLOCK._serialized_end=188
# @@protoc_insertion_point(module_scope)
