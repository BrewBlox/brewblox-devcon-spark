# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ActuatorLogic.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import brewblox_pb2 as brewblox__pb2
import nanopb_pb2 as nanopb__pb2
import IoArray_pb2 as IoArray__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='ActuatorLogic.proto',
  package='blox',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x13\x41\x63tuatorLogic.proto\x12\x04\x62lox\x1a\x0e\x62rewblox.proto\x1a\x0cnanopb.proto\x1a\rIoArray.proto\"\xcf\t\n\rActuatorLogic\x12\x1d\n\x08targetId\x18\x01 \x01(\rB\x0b\x8a\xb5\x18\x02\x18\x06\x92?\x02\x38\x10\x12/\n\x0e\x64rivenTargetId\x18\x02 \x01(\rB\x17\x8a\xb5\x18\x02\x18\x06\x92?\x02\x38\x10\x8a\xb5\x18\x02@\x01\x8a\xb5\x18\x02(\x01\x12\x0f\n\x07\x65nabled\x18\x03 \x01(\x08\x12\x38\n\x06result\x18\x04 \x01(\x0e\x32\x1a.blox.ActuatorLogic.ResultB\x0c\x8a\xb5\x18\x02\x30\x01\x8a\xb5\x18\x02(\x01\x12\x19\n\nexpression\x18\x05 \x01(\tB\x05\x92?\x02p@\x12:\n\x07\x64igital\x18\x06 \x03(\x0b\x32\".blox.ActuatorLogic.DigitalCompareB\x05\x92?\x02\x10\x10\x12\x38\n\x06\x61nalog\x18\x07 \x03(\x0b\x32!.blox.ActuatorLogic.AnalogCompareB\x05\x92?\x02\x10\x10\x12\x1d\n\x08\x65rrorPos\x18\x08 \x01(\rB\x0b\x8a\xb5\x18\x02(\x01\x92?\x02\x38\x08\x1a\xb0\x01\n\x0e\x44igitalCompare\x12\x30\n\x02op\x18\x01 \x01(\x0e\x32$.blox.ActuatorLogic.DigitalCompareOp\x12\x32\n\x06result\x18\x02 \x01(\x0e\x32\x1a.blox.ActuatorLogic.ResultB\x06\x8a\xb5\x18\x02(\x01\x12\x17\n\x02id\x18\x03 \x01(\rB\x0b\x8a\xb5\x18\x02\x18\x06\x92?\x02\x38\x10\x12\x1f\n\x03rhs\x18\x04 \x01(\x0e\x32\x12.blox.DigitalState\x1a\xa8\x01\n\rAnalogCompare\x12/\n\x02op\x18\x01 \x01(\x0e\x32#.blox.ActuatorLogic.AnalogCompareOp\x12\x32\n\x06result\x18\x02 \x01(\x0e\x32\x1a.blox.ActuatorLogic.ResultB\x06\x8a\xb5\x18\x02(\x01\x12\x17\n\x02id\x18\x03 \x01(\rB\x0b\x8a\xb5\x18\x02\x18\x01\x92?\x02\x38\x10\x12\x19\n\x03rhs\x18\x04 \x01(\x11\x42\x0c\x8a\xb5\x18\x03\x10\x80 \x92?\x02\x38 \"T\n\x10\x44igitalCompareOp\x12\x0c\n\x08VALUE_IS\x10\x00\x12\x0f\n\x0bVALUE_ISNOT\x10\x01\x12\x0e\n\nDESIRED_IS\x10\n\x12\x11\n\rDESIRED_ISNOT\x10\x0b\"M\n\x0f\x41nalogCompareOp\x12\x0c\n\x08VALUE_LE\x10\x00\x12\x0c\n\x08VALUE_GE\x10\x01\x12\x0e\n\nSETTING_LE\x10\n\x12\x0e\n\nSETTING_GE\x10\x0b\"\xe6\x02\n\x06Result\x12\t\n\x05\x46\x41LSE\x10\x00\x12\x08\n\x04TRUE\x10\x01\x12\t\n\x05\x45MPTY\x10\x02\x12\x13\n\x0f\x45MPTY_SUBSTRING\x10\x03\x12\x13\n\x0f\x42LOCK_NOT_FOUND\x10\x04\x12\x16\n\x12INVALID_DIGITAL_OP\x10\x05\x12\x15\n\x11INVALID_ANALOG_OP\x10\x06\x12\x1b\n\x17INVALID_ANA_COMPARE_IDX\x10\x07\x12\x1b\n\x17INVALID_DIG_COMPARE_IDX\x10\x08\x12\x1e\n\x1aUNEXPECTED_CLOSING_BRACKET\x10\t\x12\x1b\n\x17MISSING_CLOSING_BRACKET\x10\n\x12\x1e\n\x1aUNEXPECTED_OPENING_BRACKET\x10\x0b\x12\x18\n\x14UNEXPECTED_CHARACTER\x10\x0c\x12\x19\n\x15UNEXPECTED_COMPARISON\x10\r\x12\x17\n\x13UNEXPECTED_OPERATOR\x10\x0e:\x07\x8a\xb5\x18\x03\x18\xc2\x02\x62\x06proto3')
  ,
  dependencies=[brewblox__pb2.DESCRIPTOR,nanopb__pb2.DESCRIPTOR,IoArray__pb2.DESCRIPTOR,])



_ACTUATORLOGIC_DIGITALCOMPAREOP = _descriptor.EnumDescriptor(
  name='DigitalCompareOp',
  full_name='blox.ActuatorLogic.DigitalCompareOp',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='VALUE_IS', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VALUE_ISNOT', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DESIRED_IS', index=2, number=10,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DESIRED_ISNOT', index=3, number=11,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=773,
  serialized_end=857,
)
_sym_db.RegisterEnumDescriptor(_ACTUATORLOGIC_DIGITALCOMPAREOP)

_ACTUATORLOGIC_ANALOGCOMPAREOP = _descriptor.EnumDescriptor(
  name='AnalogCompareOp',
  full_name='blox.ActuatorLogic.AnalogCompareOp',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='VALUE_LE', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VALUE_GE', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SETTING_LE', index=2, number=10,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SETTING_GE', index=3, number=11,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=859,
  serialized_end=936,
)
_sym_db.RegisterEnumDescriptor(_ACTUATORLOGIC_ANALOGCOMPAREOP)

_ACTUATORLOGIC_RESULT = _descriptor.EnumDescriptor(
  name='Result',
  full_name='blox.ActuatorLogic.Result',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='FALSE', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TRUE', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EMPTY', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EMPTY_SUBSTRING', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BLOCK_NOT_FOUND', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_DIGITAL_OP', index=5, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_ANALOG_OP', index=6, number=6,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_ANA_COMPARE_IDX', index=7, number=7,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_DIG_COMPARE_IDX', index=8, number=8,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNEXPECTED_CLOSING_BRACKET', index=9, number=9,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MISSING_CLOSING_BRACKET', index=10, number=10,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNEXPECTED_OPENING_BRACKET', index=11, number=11,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNEXPECTED_CHARACTER', index=12, number=12,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNEXPECTED_COMPARISON', index=13, number=13,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNEXPECTED_OPERATOR', index=14, number=14,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=939,
  serialized_end=1297,
)
_sym_db.RegisterEnumDescriptor(_ACTUATORLOGIC_RESULT)


_ACTUATORLOGIC_DIGITALCOMPARE = _descriptor.Descriptor(
  name='DigitalCompare',
  full_name='blox.ActuatorLogic.DigitalCompare',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='op', full_name='blox.ActuatorLogic.DigitalCompare.op', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='result', full_name='blox.ActuatorLogic.DigitalCompare.result', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\212\265\030\002(\001'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='id', full_name='blox.ActuatorLogic.DigitalCompare.id', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\212\265\030\002\030\006\222?\0028\020'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='rhs', full_name='blox.ActuatorLogic.DigitalCompare.rhs', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=424,
  serialized_end=600,
)

_ACTUATORLOGIC_ANALOGCOMPARE = _descriptor.Descriptor(
  name='AnalogCompare',
  full_name='blox.ActuatorLogic.AnalogCompare',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='op', full_name='blox.ActuatorLogic.AnalogCompare.op', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='result', full_name='blox.ActuatorLogic.AnalogCompare.result', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\212\265\030\002(\001'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='id', full_name='blox.ActuatorLogic.AnalogCompare.id', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\212\265\030\002\030\001\222?\0028\020'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='rhs', full_name='blox.ActuatorLogic.AnalogCompare.rhs', index=3,
      number=4, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\212\265\030\003\020\200 \222?\0028 '), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=603,
  serialized_end=771,
)

_ACTUATORLOGIC = _descriptor.Descriptor(
  name='ActuatorLogic',
  full_name='blox.ActuatorLogic',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='targetId', full_name='blox.ActuatorLogic.targetId', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\212\265\030\002\030\006\222?\0028\020'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='drivenTargetId', full_name='blox.ActuatorLogic.drivenTargetId', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\212\265\030\002\030\006\222?\0028\020\212\265\030\002@\001\212\265\030\002(\001'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='enabled', full_name='blox.ActuatorLogic.enabled', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='result', full_name='blox.ActuatorLogic.result', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\212\265\030\0020\001\212\265\030\002(\001'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='expression', full_name='blox.ActuatorLogic.expression', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222?\002p@'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='digital', full_name='blox.ActuatorLogic.digital', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222?\002\020\020'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='analog', full_name='blox.ActuatorLogic.analog', index=6,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\222?\002\020\020'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='errorPos', full_name='blox.ActuatorLogic.errorPos', index=7,
      number=8, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\212\265\030\002(\001\222?\0028\010'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_ACTUATORLOGIC_DIGITALCOMPARE, _ACTUATORLOGIC_ANALOGCOMPARE, ],
  enum_types=[
    _ACTUATORLOGIC_DIGITALCOMPAREOP,
    _ACTUATORLOGIC_ANALOGCOMPAREOP,
    _ACTUATORLOGIC_RESULT,
  ],
  serialized_options=_b('\212\265\030\003\030\302\002'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=75,
  serialized_end=1306,
)

_ACTUATORLOGIC_DIGITALCOMPARE.fields_by_name['op'].enum_type = _ACTUATORLOGIC_DIGITALCOMPAREOP
_ACTUATORLOGIC_DIGITALCOMPARE.fields_by_name['result'].enum_type = _ACTUATORLOGIC_RESULT
_ACTUATORLOGIC_DIGITALCOMPARE.fields_by_name['rhs'].enum_type = IoArray__pb2._DIGITALSTATE
_ACTUATORLOGIC_DIGITALCOMPARE.containing_type = _ACTUATORLOGIC
_ACTUATORLOGIC_ANALOGCOMPARE.fields_by_name['op'].enum_type = _ACTUATORLOGIC_ANALOGCOMPAREOP
_ACTUATORLOGIC_ANALOGCOMPARE.fields_by_name['result'].enum_type = _ACTUATORLOGIC_RESULT
_ACTUATORLOGIC_ANALOGCOMPARE.containing_type = _ACTUATORLOGIC
_ACTUATORLOGIC.fields_by_name['result'].enum_type = _ACTUATORLOGIC_RESULT
_ACTUATORLOGIC.fields_by_name['digital'].message_type = _ACTUATORLOGIC_DIGITALCOMPARE
_ACTUATORLOGIC.fields_by_name['analog'].message_type = _ACTUATORLOGIC_ANALOGCOMPARE
_ACTUATORLOGIC_DIGITALCOMPAREOP.containing_type = _ACTUATORLOGIC
_ACTUATORLOGIC_ANALOGCOMPAREOP.containing_type = _ACTUATORLOGIC
_ACTUATORLOGIC_RESULT.containing_type = _ACTUATORLOGIC
DESCRIPTOR.message_types_by_name['ActuatorLogic'] = _ACTUATORLOGIC
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ActuatorLogic = _reflection.GeneratedProtocolMessageType('ActuatorLogic', (_message.Message,), dict(

  DigitalCompare = _reflection.GeneratedProtocolMessageType('DigitalCompare', (_message.Message,), dict(
    DESCRIPTOR = _ACTUATORLOGIC_DIGITALCOMPARE,
    __module__ = 'ActuatorLogic_pb2'
    # @@protoc_insertion_point(class_scope:blox.ActuatorLogic.DigitalCompare)
    ))
  ,

  AnalogCompare = _reflection.GeneratedProtocolMessageType('AnalogCompare', (_message.Message,), dict(
    DESCRIPTOR = _ACTUATORLOGIC_ANALOGCOMPARE,
    __module__ = 'ActuatorLogic_pb2'
    # @@protoc_insertion_point(class_scope:blox.ActuatorLogic.AnalogCompare)
    ))
  ,
  DESCRIPTOR = _ACTUATORLOGIC,
  __module__ = 'ActuatorLogic_pb2'
  # @@protoc_insertion_point(class_scope:blox.ActuatorLogic)
  ))
_sym_db.RegisterMessage(ActuatorLogic)
_sym_db.RegisterMessage(ActuatorLogic.DigitalCompare)
_sym_db.RegisterMessage(ActuatorLogic.AnalogCompare)


_ACTUATORLOGIC_DIGITALCOMPARE.fields_by_name['result']._options = None
_ACTUATORLOGIC_DIGITALCOMPARE.fields_by_name['id']._options = None
_ACTUATORLOGIC_ANALOGCOMPARE.fields_by_name['result']._options = None
_ACTUATORLOGIC_ANALOGCOMPARE.fields_by_name['id']._options = None
_ACTUATORLOGIC_ANALOGCOMPARE.fields_by_name['rhs']._options = None
_ACTUATORLOGIC.fields_by_name['targetId']._options = None
_ACTUATORLOGIC.fields_by_name['drivenTargetId']._options = None
_ACTUATORLOGIC.fields_by_name['result']._options = None
_ACTUATORLOGIC.fields_by_name['expression']._options = None
_ACTUATORLOGIC.fields_by_name['digital']._options = None
_ACTUATORLOGIC.fields_by_name['analog']._options = None
_ACTUATORLOGIC.fields_by_name['errorPos']._options = None
_ACTUATORLOGIC._options = None
# @@protoc_insertion_point(module_scope)
