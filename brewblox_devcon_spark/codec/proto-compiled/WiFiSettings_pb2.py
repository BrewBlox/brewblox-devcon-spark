# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: WiFiSettings.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import brewblox_pb2 as brewblox__pb2
import nanopb_pb2 as nanopb__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x12WiFiSettings.proto\x12\x11\x62lox.WiFiSettings\x1a\x0e\x62rewblox.proto\x1a\x0cnanopb.proto\"\xd4\x01\n\x05\x42lock\x12\x13\n\x04ssid\x18\x01 \x01(\tB\x05\x92?\x02\x08!\x12\x17\n\x08password\x18\x02 \x01(\tB\x05\x92?\x02\x08@\x12-\n\x08security\x18\x03 \x01(\x0e\x32\x1b.blox.WiFiSettings.Security\x12)\n\x06\x63ipher\x18\x04 \x01(\x0e\x32\x19.blox.WiFiSettings.Cipher\x12!\n\x06signal\x18\x05 \x01(\x05\x42\x11\x8a\xb5\x18\x02(\x01\x8a\xb5\x18\x02\x30\x01\x92?\x02\x38\x08\x12\x17\n\x02ip\x18Z \x01(\x08\x42\x0b\x8a\xb5\x18\x02H\x01\x92?\x02\x18\x03:\x07\x8a\xb5\x18\x03\x18\xb8\x02*\xa7\x01\n\x08Security\x12\x12\n\x0eWLAN_SEC_UNSEC\x10\x00\x12\x10\n\x0cWLAN_SEC_WEP\x10\x01\x12\x10\n\x0cWLAN_SEC_WPA\x10\x02\x12\x11\n\rWLAN_SEC_WPA2\x10\x03\x12\x1b\n\x17WLAN_SEC_WPA_ENTERPRISE\x10\x04\x12\x1c\n\x18WLAN_SEC_WPA2_ENTERPRISE\x10\x05\x12\x15\n\x10WLAN_SEC_NOT_SET\x10\xff\x01*i\n\x06\x43ipher\x12\x17\n\x13WLAN_CIPHER_NOT_SET\x10\x00\x12\x13\n\x0fWLAN_CIPHER_AES\x10\x01\x12\x14\n\x10WLAN_CIPHER_TKIP\x10\x02\x12\x1b\n\x17WLAN_CIPHER_AES_OR_TKIP\x10\x03\x62\x06proto3')

_SECURITY = DESCRIPTOR.enum_types_by_name['Security']
Security = enum_type_wrapper.EnumTypeWrapper(_SECURITY)
_CIPHER = DESCRIPTOR.enum_types_by_name['Cipher']
Cipher = enum_type_wrapper.EnumTypeWrapper(_CIPHER)
WLAN_SEC_UNSEC = 0
WLAN_SEC_WEP = 1
WLAN_SEC_WPA = 2
WLAN_SEC_WPA2 = 3
WLAN_SEC_WPA_ENTERPRISE = 4
WLAN_SEC_WPA2_ENTERPRISE = 5
WLAN_SEC_NOT_SET = 255
WLAN_CIPHER_NOT_SET = 0
WLAN_CIPHER_AES = 1
WLAN_CIPHER_TKIP = 2
WLAN_CIPHER_AES_OR_TKIP = 3


_BLOCK = DESCRIPTOR.message_types_by_name['Block']
Block = _reflection.GeneratedProtocolMessageType('Block', (_message.Message,), {
  'DESCRIPTOR' : _BLOCK,
  '__module__' : 'WiFiSettings_pb2'
  # @@protoc_insertion_point(class_scope:blox.WiFiSettings.Block)
  })
_sym_db.RegisterMessage(Block)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _BLOCK.fields_by_name['ssid']._options = None
  _BLOCK.fields_by_name['ssid']._serialized_options = b'\222?\002\010!'
  _BLOCK.fields_by_name['password']._options = None
  _BLOCK.fields_by_name['password']._serialized_options = b'\222?\002\010@'
  _BLOCK.fields_by_name['signal']._options = None
  _BLOCK.fields_by_name['signal']._serialized_options = b'\212\265\030\002(\001\212\265\030\0020\001\222?\0028\010'
  _BLOCK.fields_by_name['ip']._options = None
  _BLOCK.fields_by_name['ip']._serialized_options = b'\212\265\030\002H\001\222?\002\030\003'
  _BLOCK._options = None
  _BLOCK._serialized_options = b'\212\265\030\003\030\270\002'
  _SECURITY._serialized_start=287
  _SECURITY._serialized_end=454
  _CIPHER._serialized_start=456
  _CIPHER._serialized_end=561
  _BLOCK._serialized_start=72
  _BLOCK._serialized_end=284
# @@protoc_insertion_point(module_scope)
