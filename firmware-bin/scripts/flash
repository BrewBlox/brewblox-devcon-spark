#! /usr/bin/env bash
set -e

function flash() {
    particle flash --usb --yes "$1"
}

function notify() {
    echo "Your firmware has been updated."
    echo "If a new bootloader is required, your Spark will automatically download it over WiFi."
    echo "ONLY If your Spark LED keeps blinking blue, run: 'brewblox-ctl particle -c flash-bootloader'"
}

# Check for Photon / P1 not currently in DFU mode
if [[ -n $(lsusb -d 2b04:c006) ]] || [[ -n $(lsusb -d 2b04:c008) ]]; then
    echo "Triggering DFU mode..."
    node ./serial-trigger.js
    sleep 5
fi

if [[ -n $(lsusb -d 2b04:d006) ]]; then
    echo "Flashing Photon..."
    echo "Flashing System 1 file..."
    flash system-part1-photon.bin
    echo "Flashing System 2 file..."
    flash system-part2-photon.bin
    echo "Flashing Firmware file..."
    flash brewblox-photon.bin
    notify
    sleep 5
    exit
fi

if [[ -n $(lsusb -d 2b04:d008) ]]; then
    echo "Flashing P1..."
    echo -n "Flashing System 1 file..."
    flash system-part1-p1.bin
    echo -n "Flashing System 2 file..."
    flash system-part2-p1.bin
    echo -n "Flashing Firmware file..."
    flash brewblox-p1.bin
    notify
    sleep 5
    exit
fi

if [[ -n $(lsusb -d 10c4:ea60) ]]; then
    echo "Flashing ESP32..."
    esptool.py \
        --baud 460800 \
        --before default_reset \
        --after hard_reset \
        --chip esp32 \
        write_flash \
        --flash_mode dio \
        --flash_size detect \
        --flash_freq 40m \
        0x1000 ./bootloader-esp32.bin \
        0x8000 ./partition-table-esp32.bin \
        0x10000 ./brewblox-esp32.bin
    echo "Your firmware has been updated."
    sleep 5
    exit
fi

echo "No compatible USB devices found"
