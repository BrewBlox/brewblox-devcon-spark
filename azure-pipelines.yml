resources:
  repositories:
    - repository: templates
      type: github
      name: BrewBlox/deployed-images
      ref: refs/heads/feature/templates

extends:
  template: docker-build.yml@templates

steps:
- task: UsePythonVersion@0
  inputs:
    addToPath: true
    versionSpec: '3.7'
    architecture: 'x64'

- bash: |
    set -o allexport; source .env; set +o allexport
    echo "##vso[task.setvariable variable=DOCKER_REPO]$DOCKER_REPO"
    echo "##vso[task.setvariable variable=FLASHER_REPO]$FLASHER_REPO"
  displayName: Export .env variables

# - bash: |
#     BRANCH=$(echo $(Build.SourceBranch) | grep -oP "^refs/heads/\K.*")
#     TAG=$(echo $BRANCH | tr '/' '-' | tr '[:upper:]' '[:lower:]')
#     echo "##vso[task.setvariable variable=BRANCH]$BRANCH"
#     echo "##vso[task.setvariable variable=TAG]$TAG"
#   displayName: Export build variables

- bash: |
    pip install poetry
    poetry install
  displayName: Install dependencies

- bash: |
    poetry run pytest --integration
  displayName: Run Pytest

# - bash: |
#     curl -L -o ~/.docker/cli-plugins/docker-buildx --create-dirs ${BUILDX_URL}
#     chmod a+x ~/.docker/cli-plugins/docker-buildx
#     docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
#     docker buildx create --use
#     docker buildx inspect --bootstrap
#   displayName: Prepare buildx
#   condition: and(succeeded(), variables.BRANCH)
#   env:
#     BUILDX_URL: https://github.com/docker/buildx/releases/download/v0.4.1/buildx-v0.4.1.linux-amd64

# - bash: |
#     echo $(DOCKER_PASSWORD) | docker login -u $(DOCKER_USER) --password-stdin
#   displayName: Docker login
#   condition: and(succeeded(), variables.BRANCH)

# Service image

- bash: |
    bash docker/before_build.sh
  displayName: Run before_build.sh script
  condition: and(succeeded(), variables.BRANCH)

- bash: >-
    docker buildx build
    --tag $(DOCKER_REPO):$(TAG)
    --build-arg service_info="$(git describe) @ $(date)"
    --push
    --platform linux/amd64,linux/arm/v7
    docker
  displayName: Build Docker image
  condition: and(succeeded(), variables.BRANCH)

# Flasher image

- bash: |
    bash flasher/before_build.sh
  displayName: (Flasher) Run before_build.sh script
  condition: and(succeeded(), variables.BRANCH)

- bash: >-
    docker buildx build
    --tag $(FLASHER_REPO):$(TAG)
    --push
    --platform linux/amd64,linux/arm/v7
    flasher
  displayName: (Flasher) Build Docker image
  condition: and(succeeded(), variables.BRANCH)
